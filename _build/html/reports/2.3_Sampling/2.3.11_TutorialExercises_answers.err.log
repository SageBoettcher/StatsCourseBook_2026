Traceback (most recent call last):
  File "/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/miniconda3/envs/clean_env/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Note this can be copied from examples in chapter 0 ("prepwork")
nSamples = 10000 # we will draw 10,000 samples
samplesize=[3,4,5] # each sample contains n people

for j in range(len(samplesize)):
    m=np.empty(nSamples) # make an array to store the means

    for i in range(nSamples):
        # Your code here to fill in m with sample means
        sample = UKBrexdex.sample(n=samplesize, replace=False)
        m[i]=sample.score.mean()
        
    plt.subplot(3,1,j+1)
    sns.histplot(m, bins=range(0,100,5))
    plt.xlabel('sample mean')

plt.tight_layout()
plt.show()
------------------


[31m---------------------------------------------------------------------------[39m
[31mTypeError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[12][39m[32m, line 10[39m
[32m      6[39m m=np.empty(nSamples) [38;5;66;03m# make an array to store the means[39;00m
[32m      8[39m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(nSamples):
[32m      9[39m     [38;5;66;03m# Your code here to fill in m with sample means[39;00m
[32m---> [39m[32m10[39m     sample = [43mUKBrexdex[49m[43m.[49m[43msample[49m[43m([49m[43mn[49m[43m=[49m[43msamplesize[49m[43m,[49m[43m [49m[43mreplace[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m
[32m     11[39m     m[i]=sample.score.mean()
[32m     13[39m plt.subplot([32m3[39m,[32m1[39m,j+[32m1[39m)

[36mFile [39m[32m/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/pandas/core/generic.py:6129[39m, in [36mNDFrame.sample[39m[34m(self, n, frac, replace, weights, random_state, axis, ignore_index)[39m
[32m   6126[39m [38;5;66;03m# Process random_state argument[39;00m
[32m   6127[39m rs = common.random_state(random_state)
[32m-> [39m[32m6129[39m size = [43msample[49m[43m.[49m[43mprocess_sampling_size[49m[43m([49m[43mn[49m[43m,[49m[43m [49m[43mfrac[49m[43m,[49m[43m [49m[43mreplace[49m[43m)[49m
[32m   6130[39m [38;5;28;01mif[39;00m size [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m   6131[39m     [38;5;28;01massert[39;00m frac [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m

[36mFile [39m[32m/opt/miniconda3/envs/clean_env/lib/python3.11/site-packages/pandas/core/sample.py:96[39m, in [36mprocess_sampling_size[39m[34m(n, frac, replace)[39m
[32m     94[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([33m"[39m[33mPlease enter a value for `frac` OR `n`, not both[39m[33m"[39m)
[32m     95[39m [38;5;28;01melif[39;00m n [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m---> [39m[32m96[39m     [38;5;28;01mif[39;00m [43mn[49m[43m [49m[43m<[49m[43m [49m[32;43m0[39;49m:
[32m     97[39m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[32m     98[39m             [33m"[39m[33mA negative number of rows requested. Please provide `n` >= 0.[39m[33m"[39m
[32m     99[39m         )
[32m    100[39m     [38;5;28;01mif[39;00m n % [32m1[39m != [32m0[39m:

[31mTypeError[39m: '<' not supported between instances of 'list' and 'int'

